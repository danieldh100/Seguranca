//Segurança e Auditoria de Sistemas.
//Aluno: Daniel Maicon Lauermann.
//Segurança e Auditoria de Sistemas.
//Aluno: Daniel Maicon Lauermann.
#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <vector>
#include <string.h>
#include <time.h>

using namespace std;


//fread - fwrite

int main()
{
   setlocale(LC_ALL, "Portuguese");
   FILE *fp;
   char string[1234];
   int i=0,lenstr=0,v[256],x[256];
   char ch;
   char ascii[256];
   FILE *randkey;
   FILE *resposta;
   FILE *cifrado;
 
   fp = fopen("entrada.txt","a+");
   randkey = fopen ("key.txt","a+");
   resposta = fopen("resposta.txt","a+");
   cifrado = fopen("cifrado.txt","a+");  	
  
		
	int opc;

	fread(string,sizeof (char),1234,fp);
    string[strlen(string)]='\0';
    lenstr = strlen(string);
	printf("%s\n",string);		


	printf("Opc: 1=Cifrar - 2=Decifrar      Selecione: ");
	scanf("%d",&opc);


	/*
	if(!fp)
     {
       printf( "Erro na abertura do arquivo");
       exit(0);
     }   
     while((ch=fgetc(fp)) != EOF){
        string = (char *)realloc(string, (++lenstr) * sizeof(char));
    	string[lenstr - 1] = ch;   
     }
  */
   if(opc==1){
   	 randkey = fopen ("key.txt","w");
   	 resposta = fopen("resposta.txt","w");
     cifrado = fopen("cifrado.txt","w");  	
   	 
     	printf("\n\n%s\n\n",string);
     	fprintf(resposta, "%s\n",string);
		//fwrite(string , sizeof(char), sizeof(string), resposta);  
   	
   	 int temp,rep,j;
   	 printf("%d",lenstr);
   	srand( (unsigned)time(NULL) );                        //Gerar números aleatórios;
	for(i=0;i<255;i++){
    	x[i]= rand() % 255;
   	    fprintf(randkey, "%d\n", x[i]);		      				
	}
   		for(i=0;i<lenstr;i++)
		   fprintf(cifrado,"%c",x[string[i]]);

	}
	int j=0,endereco[lenstr],g;
	if(opc==2){
		for(i=0;i<256;i++){			
			fscanf(randkey,"%d\n",&x[i]);
			printf("%d\n",x[i]);
		}
		printf("%s\n\n",string);
		for(i=0;i<lenstr;i++){
			for(j=0;j<256;j++){
				if(string[i]==x[j]){
			    	printf("\n\n %c = %c ||| %d = %d ||| %d = %c \n\n",string[i],x[j],string[i],x[j],j,j);
					break;
			    	
				}
		    }
		}	
		
	}    
}
